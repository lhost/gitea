Description: Update app.ini with debianized defaults.
 This patch updates the default app.ini, provided by upstream, with some
 debianized defaults; useful for running from the packaged version.
Author: Michael Lustfield <michael@lustfield.net>
Forwarded: not-needed
--- a/conf/app.ini
+++ b/conf/app.ini
@@ -1,12 +1,12 @@
 ; App name that shows on every page title
 APP_NAME = Gitea: Git with a cup of tea
 ; Change it if you run locally
-RUN_USER = git
+RUN_USER = gitea
 ; Either "dev", "prod" or "test", default is "dev"
-RUN_MODE = dev
+RUN_MODE = prod
 
 [repository]
-ROOT =
+ROOT = /var/lib/gitea/repositories
 SCRIPT_TYPE = bash
 ; Default ANSI charset
 ANSI_CHARSET =
@@ -36,13 +36,13 @@
 
 [repository.local]
 ; Path for uploads. Defaults to `tmp/local-repo`
-LOCAL_COPY_PATH = tmp/local-repo
+LOCAL_COPY_PATH = /tmp/local-repo
 
 [repository.upload]
 ; Whether repository file uploads are enabled. Defaults to `true`
 ENABLED = true
 ; Path for uploads. Defaults to `data/tmp/uploads` (tmp gets deleted on gitea restart)
-TEMP_PATH = data/tmp/uploads
+TEMP_PATH = /var/lib/gitea/data/tmp/uploads
 ; One or more allowed types, e.g. image/jpeg|image/png. Nothing means any file type
 ALLOWED_TYPES =
 ; Max size of each file in MB. Defaults to 3MB
@@ -159,9 +159,9 @@
 KEY_FILE = custom/https/key.pem
 ; Upper level of template and static file path
 ; default is the path where Gitea is executed
-STATIC_ROOT_PATH =
+STATIC_ROOT_PATH = /usr/share/gitea
 ; Default path for App data
-APP_DATA_PATH = data
+APP_DATA_PATH = /var/lib/gitea/data
 ; Application level GZIP support
 ENABLE_GZIP = false
 ; Landing page for non-logged users, can be "home" or "explore"
@@ -169,7 +169,7 @@
 ; Enables git-lfs support. true or false, default is false.
 LFS_START_SERVER = false
 ; Where your lfs files put on, default is data/lfs.
-LFS_CONTENT_PATH = data/lfs
+LFS_CONTENT_PATH = /var/lib/gitea/data/lfs
 ; LFS authentication secret, changed this to yourself.
 LFS_JWT_SECRET   =
 
@@ -182,7 +182,7 @@
 
 [database]
 ; Either "mysql", "postgres", "mssql" or "sqlite3", it's your choice
-DB_TYPE = mysql
+DB_TYPE = sqlite3
 HOST = 127.0.0.1:3306
 NAME = gitea
 USER = root
@@ -190,7 +190,7 @@
 ; For "postgres" only, either "disable", "require" or "verify-full"
 SSL_MODE = disable
 ; For "sqlite3" and "tidb", use absolute path when you start as service
-PATH = data/gitea.db
+PATH = /var/lib/gitea/data/gitea.db
 ; For "sqlite3" only. Query timeout
 SQLITE_TIMEOUT = 500
 ; For iterate buffer, default is 50
@@ -210,9 +210,9 @@
 
 [security]
 ; Whether the installer is disabled
-INSTALL_LOCK = false
+INSTALL_LOCK = true
 ; !!CHANGE THIS TO KEEP YOUR USER DATA SAFE!!
-SECRET_KEY = !#@FDEWREWR&*(
+SECRET_KEY = Xx-secret-key-xX
 ; Auto-login remember days
 LOGIN_REMEMBER_DAYS = 7
 COOKIE_USERNAME = gitea_awesome
@@ -361,7 +361,7 @@
 ; file: session file path, e.g. `data/sessions`
 ; redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180
 ; mysql: go-sql-driver/mysql dsn config string, e.g. `root:password@/session_table`
-PROVIDER_CONFIG = data/sessions
+PROVIDER_CONFIG = /var/lib/gitea/data/sessions
 ; Session cookie name
 COOKIE_NAME = i_like_gitea
 ; If you use session in https only, default is false
@@ -374,7 +374,7 @@
 SESSION_LIFE_TIME = 86400
 
 [picture]
-AVATAR_UPLOAD_PATH = data/avatars
+AVATAR_UPLOAD_PATH = /var/lib/gitea/data/avatars
 ; Chinese users can choose "duoshuo"
 ; or a custom avatar source, like: http://cn.gravatar.com/avatar/
 GRAVATAR_SOURCE = gravatar
@@ -389,7 +389,7 @@
 ; Whether attachments are enabled. Defaults to `true`
 ENABLE = true
 ; Path for attachments. Defaults to `data/attachments`
-PATH = data/attachments
+PATH = /var/lib/gitea/data/attachments
 ; One or more allowed types, e.g. image/jpeg|image/png
 ALLOWED_TYPES = image/jpeg|image/png|application/zip|application/gzip
 ; Max size of each file. Defaults to 32MB
@@ -404,24 +404,24 @@
 FORMAT =
 
 [log]
-ROOT_PATH =
+ROOT_PATH = /var/log/gitea
 ; Either "console", "file", "conn", "smtp" or "database", default is "console"
 ; Use comma to separate multiple modes, e.g. "console, file"
-MODE = console
+MODE = file
 ; Buffer length of channel, keep it as it is if you don't know what it is.
 BUFFER_LEN = 10000
 ; Either "Trace", "Debug", "Info", "Warn", "Error", "Critical", default is "Trace"
-LEVEL = Trace
+LEVEL = Warn
 
 ; For "console" mode only
 [log.console]
-LEVEL =
+LEVEL = Critical
 
 ; For "file" mode only
 [log.file]
-LEVEL =
+LEVEL = Warn
 ; This enables automated log rotate(switch of following options), default is true
-LOG_ROTATE = true
+LOG_ROTATE = false
 ; Max line number of single file, default is 1000000
 MAX_LINES = 1000000
 ; Max size shift of single file, default is 28 means 1 << 28, 256MB
